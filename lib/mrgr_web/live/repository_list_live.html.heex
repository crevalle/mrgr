<div class="two-pane-layout">
  <div class="main-pane">
    <div class="">
      <div class="flex justify-between mb-2">
        <.h1>Security Policies</.h1>
        <.l phx-click={
          JS.push("add-policy")
          |> show_detail()
        }>
          Add New
        </.l>
      </div>
      <%= if @policies == [] do %>
        <div class="p-4 border border-solid rounded-md bg-blue-50 flex flex-col items-center">
          <p>
            <strong>None Yet!</strong>
            Why don't you
            <.inline_link phx-click={
              JS.push("add-policy")
              |> show_detail()
            }>
              Add One
            </.inline_link>?
          </p>
        </div>
      <% else %>
        <table class="min-w-full shadow ring-1 ring-black ring-opacity-5 rounded-lg">
          <thead class="bg-gray-100">
            <th class="p-3 text-left text-xs font-medium uppercase tracking-wide text-gray-500">
              Name
            </th>
            <.th>Repos</.th>
            <.th>Required Approvals</.th>
            <.th>allowed merge types</.th>
            <.th></.th>
          </thead>
          <tbody class="bg-white">
            <tr
              :for={policy <- @policies}
              class={"#{selected_outline(selected?(policy, @selected_policy))}"}
            >
              <td class="py-4 pl-4 flex items-center text-sm font-medium text-gray-900">
                <%= policy.name %>
                <.policy_badges policy={policy} />
              </td>
              <td class="p-3 text-gray-500 text-right text-nowrap">
                <.compliant_repos_count
                  compliant={Mrgr.RepositorySettingsPolicy.compliant_repos(policy)}
                  repos={repos_for_policy(@all_repos, policy)}
                />
                <.l phx-click={JS.push("select-policy", value: %{policy_id: policy.id})}>
                  Remediate
                </.l>
              </td>
              <td class="p-3 text-center">
                <.approving_review_count count={policy.settings.required_approving_review_count} />
              </td>
              <td class="p-3"><.possible_merge_badges settings={policy.settings} /></td>
              <td class="p-3">
                <.l
                  phx_click={
                    JS.push("edit-policy")
                    |> show_detail()
                  }
                  phx_value_id={policy.id}
                >
                  Edit
                </.l>
              </td>
            </tr>
          </tbody>
        </table>
      <% end %>
    </div>

    <div class="section">
      <%= if @selected_policy do %>
        <div class="flex justify-between basis-1/2">
          <.heading title={"Repositories assigned to policy #{@selected_policy.name}"} />

          <.inline_link
            phx-click={
              JS.push("enforce-policy-to-repos", value: %{policy_id: @selected_policy.id})
            }
            data_confirm="This will update the settings on all the policy's repositories.  Are you sure?"
            class="text-red-700 hover:text-red-900"
          >
            Enforce Policy on These Repos
          </.inline_link>
        </div>
      <% else %>
        <.heading title={"All Repositories for #{ @installation.account.login }"} />
      <% end %>
      <.installation_synced_at dt={@installation.repos_last_synced_at} timezone={@timezone} />

      <table class="mt-4 min-w-full shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
        <thead class="bg-gray-100">
          <th class="py-3 pl-20 text-left text-xs font-medium uppercase tracking-wide text-gray-500">
            Name
          </th>
          <.th>Required Approvals</.th>
          <.th>Allowed Merge Types</.th>
          <.th>Policy</.th>
          <.th>Show PRs?</.th>
        </thead>
        <tbody class="divide-y divide-gray-200 bg-white">
          <tr :for={repo <- @repo_list}>
            <td class="py-4 pl-4 text-sm font-medium text-gray-900">
              <div class="flex space-x-2">
                <.language_icon language={repo.language} />
                <.lock bool={repo.private} />
                <span><%= repo.name %></span>
                <.repo_forked_badge parent={repo.parent} />
              </div>
            </td>
            <td class="text-center">
              <.approving_review_count count={repo.settings.required_approving_review_count} />
            </td>
            <td><.possible_merge_badges settings={repo.settings} /></td>
            <td class="pl-3 text-center">
              <.live_component
                module={MrgrWeb.Components.Live.EnforceRepositoryPolicy}
                id={"enforce-repo-policy-#{repo.id}"}
                repo={repo}
                policies={@policies}
              />
            </td>
            <td class="text-center">
              <.live_component
                module={MrgrWeb.Components.Live.ToggleRepositoryShowPRs}
                id={"toggle-repo-show-prs-#{repo.id}"}
                repo={repo}
              />
            </td>
          </tr>
        </tbody>
      </table>

      <div
        :if={@repo_list == []}
        class="mt-2 p-4 border border-solid rounded-md bg-blue-50 flex flex-col items-center"
      >
        <p><strong>None!</strong></p>
      </div>
    </div>
  </div>

  <div id="detail-pane">
    <.live_component
      module={MrgrWeb.Components.Live.RepositorySettingsPolicyForm}
      id="security-policy-form"
      object={@form_object}
      repos={@all_repos}
      selected_repository_ids={Enum.map(repos_for_policy(@all_repos, @form_object), & &1.id)}
      current_user={@current_user}
      timezone={@timezone}
    />
  </div>
</div>
